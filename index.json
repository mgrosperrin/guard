{
  "api/MGR.Guard.Guardian.html": {
    "href": "api/MGR.Guard.Guardian.html",
    "title": "Class Guardian | MGR.Guard documentation site",
    "keywords": "Class Guardian Class to check whether a parameter, argument, invariant satisfy some usual conditions. Inheritance System.Object Guardian Implements IGuardian Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : MGR.Guard Assembly : MGR.Guard.dll Syntax public sealed class Guardian : IGuardian Properties | Improve this Doc View Source ChecksThat Gets the current instance of the guardian. Declaration public static Guardian ChecksThat { get; } Property Value Type Description Guardian Explicit Interface Implementations | Improve this Doc View Source IGuardian.ExtractValueAndParameterNameFromExpression<T>(Expression<Func<T>>) Declaration ValueAndParameterName<T> IGuardian.ExtractValueAndParameterNameFromExpression<T>(Expression<Func<T>> selector) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> selector Returns Type Description ValueAndParameterName <T> Type Parameters Name Description T Implements IGuardian Extension Methods GuardianExtensions.Exists(Guardian, Expression<Func<FileSystemInfo>>) GuardianExtensions.Exists(Guardian, FileSystemInfo, String) GuardianExtensions.IsBetween<T>(Guardian, Expression<Func<T>>, T, T) GuardianExtensions.IsBetween<T>(Guardian, T, String, T, T) GuardianExtensions.IsBetween<T>(Guardian, Expression<Func<T>>, T, T, IComparer<T>) GuardianExtensions.IsBetween<T>(Guardian, T, String, T, T, IComparer<T>) GuardianExtensions.IsDefined<TEnum>(Guardian, Expression<Func<TEnum>>) GuardianExtensions.IsDefined<TEnum>(Guardian, TEnum, String) GuardianExtensions.IsEqualTo<T>(Guardian, Expression<Func<T>>, T) GuardianExtensions.IsEqualTo<T>(Guardian, T, String, T) GuardianExtensions.IsEqualTo<T>(Guardian, Expression<Func<T>>, T, IComparer<T>) GuardianExtensions.IsEqualTo<T>(Guardian, T, String, T, IComparer<T>) GuardianExtensions.IsEqualToZero(Guardian, Expression<Func<Int32>>) GuardianExtensions.IsEqualToZero(Guardian, Int32, String) GuardianExtensions.IsEqualToZero(Guardian, Expression<Func<Int64>>) GuardianExtensions.IsEqualToZero(Guardian, Int64, String) GuardianExtensions.IsEqualToZero(Guardian, Expression<Func<Double>>) GuardianExtensions.IsEqualToZero(Guardian, Double, String) GuardianExtensions.IsEqualToZero(Guardian, Expression<Func<Single>>) GuardianExtensions.IsEqualToZero(Guardian, Single, String) GuardianExtensions.IsGreaterThan<T>(Guardian, Expression<Func<T>>, T) GuardianExtensions.IsGreaterThan<T>(Guardian, T, String, T) GuardianExtensions.IsGreaterThan<T>(Guardian, Expression<Func<T>>, T, IComparer<T>) GuardianExtensions.IsGreaterThan<T>(Guardian, T, String, T, IComparer<T>) GuardianExtensions.IsGreaterThanOrEqualTo<T>(Guardian, Expression<Func<T>>, T) GuardianExtensions.IsGreaterThanOrEqualTo<T>(Guardian, T, String, T) GuardianExtensions.IsGreaterThanOrEqualTo<T>(Guardian, Expression<Func<T>>, T, IComparer<T>) GuardianExtensions.IsGreaterThanOrEqualTo<T>(Guardian, T, String, T, IComparer<T>) GuardianExtensions.IsGreaterThanOrEqualToZero(Guardian, Expression<Func<Int32>>) GuardianExtensions.IsGreaterThanOrEqualToZero(Guardian, Int32, String) GuardianExtensions.IsGreaterThanOrEqualToZero(Guardian, Expression<Func<Int64>>) GuardianExtensions.IsGreaterThanOrEqualToZero(Guardian, Int64, String) GuardianExtensions.IsGreaterThanOrEqualToZero(Guardian, Expression<Func<Double>>) GuardianExtensions.IsGreaterThanOrEqualToZero(Guardian, Double, String) GuardianExtensions.IsGreaterThanOrEqualToZero(Guardian, Expression<Func<Single>>) GuardianExtensions.IsGreaterThanOrEqualToZero(Guardian, Single, String) GuardianExtensions.IsGreaterThanZero(Guardian, Expression<Func<Int32>>) GuardianExtensions.IsGreaterThanZero(Guardian, Int32, String) GuardianExtensions.IsGreaterThanZero(Guardian, Expression<Func<Int64>>) GuardianExtensions.IsGreaterThanZero(Guardian, Int64, String) GuardianExtensions.IsGreaterThanZero(Guardian, Expression<Func<Double>>) GuardianExtensions.IsGreaterThanZero(Guardian, Double, String) GuardianExtensions.IsGreaterThanZero(Guardian, Expression<Func<Single>>) GuardianExtensions.IsGreaterThanZero(Guardian, Single, String) GuardianExtensions.IsLowerThan<T>(Guardian, Expression<Func<T>>, T) GuardianExtensions.IsLowerThan<T>(Guardian, T, String, T) GuardianExtensions.IsLowerThan<T>(Guardian, Expression<Func<T>>, T, IComparer<T>) GuardianExtensions.IsLowerThan<T>(Guardian, T, String, T, IComparer<T>) GuardianExtensions.IsLowerThanOrEqualTo<T>(Guardian, Expression<Func<T>>, T) GuardianExtensions.IsLowerThanOrEqualTo<T>(Guardian, T, String, T) GuardianExtensions.IsLowerThanOrEqualTo<T>(Guardian, Expression<Func<T>>, T, IComparer<T>) GuardianExtensions.IsLowerThanOrEqualTo<T>(Guardian, T, String, T, IComparer<T>) GuardianExtensions.IsLowerThanOrEqualToZero(Guardian, Expression<Func<Int32>>) GuardianExtensions.IsLowerThanOrEqualToZero(Guardian, Int32, String) GuardianExtensions.IsLowerThanOrEqualToZero(Guardian, Expression<Func<Int64>>) GuardianExtensions.IsLowerThanOrEqualToZero(Guardian, Int64, String) GuardianExtensions.IsLowerThanOrEqualToZero(Guardian, Expression<Func<Double>>) GuardianExtensions.IsLowerThanOrEqualToZero(Guardian, Double, String) GuardianExtensions.IsLowerThanOrEqualToZero(Guardian, Expression<Func<Single>>) GuardianExtensions.IsLowerThanOrEqualToZero(Guardian, Single, String) GuardianExtensions.IsLowerThanZero(Guardian, Expression<Func<Int32>>) GuardianExtensions.IsLowerThanZero(Guardian, Int32, String) GuardianExtensions.IsLowerThanZero(Guardian, Expression<Func<Int64>>) GuardianExtensions.IsLowerThanZero(Guardian, Int64, String) GuardianExtensions.IsLowerThanZero(Guardian, Expression<Func<Double>>) GuardianExtensions.IsLowerThanZero(Guardian, Double, String) GuardianExtensions.IsLowerThanZero(Guardian, Expression<Func<Single>>) GuardianExtensions.IsLowerThanZero(Guardian, Single, String) GuardianExtensions.IsNotNull<T>(Guardian, Expression<Func<T>>) GuardianExtensions.IsNotNull(Guardian, Object, String) GuardianExtensions.IsNotNullOrEmpty(Guardian, Expression<Func<String>>) GuardianExtensions.IsNotNullOrEmpty(Guardian, String, String) GuardianExtensions.IsNotEmptyGuid(Guardian, Expression<Func<Guid>>) GuardianExtensions.IsNotEmptyGuid(Guardian, Guid, String) GuardianExtensions.IsStrictlyBetween<T>(Guardian, Expression<Func<T>>, T, T) GuardianExtensions.IsStrictlyBetween<T>(Guardian, T, String, T, T) GuardianExtensions.IsStrictlyBetween<T>(Guardian, Expression<Func<T>>, T, T, IComparer<T>) GuardianExtensions.IsStrictlyBetween<T>(Guardian, T, String, T, T, IComparer<T>)"
  },
  "api/MGR.Guard.ValueAndParameterName-1.html": {
    "href": "api/MGR.Guard.ValueAndParameterName-1.html",
    "title": "Struct ValueAndParameterName<T> | MGR.Guard documentation site",
    "keywords": "Struct ValueAndParameterName<T> Encapsulate the value and the parameter name extracted from an expression. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : MGR.Guard Assembly : MGR.Guard.dll Syntax public struct ValueAndParameterName<T> Type Parameters Name Description T The type of the value. Properties | Improve this Doc View Source ParameterName Gets the parameter name extracted from an expression. Declaration public string ParameterName { get; } Property Value Type Description System.String | Improve this Doc View Source Value Gets the value extracted from an expression. Declaration public T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source Deconstruct(out T, out String) Deconstruct this instance. Used by C# compiler. Declaration public void Deconstruct(out T value, out string parameterName) Parameters Type Name Description T value The value. System.String parameterName The parameter name."
  },
  "api/MGR.Guard.Guard.html": {
    "href": "api/MGR.Guard.Guard.html",
    "title": "Class Guard | MGR.Guard documentation site",
    "keywords": "Class Guard Class to check whether a parameter, argument, invariant satisfy some usual conditions. Inheritance System.Object Guard Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : MGR.Guard Assembly : MGR.Guard.dll Syntax [Obsolete(\"Please use extensions methods to MGR.Guardian.ChecksThat.Guardian.ChecksThat property instead.\")] public static class Guard Methods | Improve this Doc View Source Exists(FileSystemInfo, String) Checks if the specified System.IO.FileSystemInfo file exists. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.Exists instead.\")] public static void Exists(FileSystemInfo file, string parameterName) Parameters Type Name Description System.IO.FileSystemInfo file The file. System.String parameterName The name of the file parameter. | Improve this Doc View Source Exists(Expression<Func<FileSystemInfo>>) Checks if the specified System.IO.FileSystemInfo expression exists. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.Exists instead.\")] public static void Exists(Expression<Func<FileSystemInfo>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.IO.FileSystemInfo >> expression The file as an Expression. | Improve this Doc View Source IsBetween<T>(T, String, T, T) Checks if the specified value is between the minLimit and the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsBetween instead.\")] public static void IsBetween<T>(T value, string parameterName, T minLimit, T maxLimit) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. T maxLimit The max limit. Type Parameters Name Description T | Improve this Doc View Source IsBetween<T>(T, String, T, T, IComparer<T>) Checks if the specified value is between the minLimit and the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsBetween instead.\")] public static void IsBetween<T>(T value, string parameterName, T minLimit, T maxLimit, IComparer<T> comparer) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T | Improve this Doc View Source IsBetween<T>(Expression<Func<T>>, T, T) Checks if the specified value is between between the minLimit and the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsBetween instead.\")] public static void IsBetween<T>(Expression<Func<T>> expression, T minLimit, T maxLimit) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. T maxLimit The max limit. Type Parameters Name Description T | Improve this Doc View Source IsBetween<T>(Expression<Func<T>>, T, T, IComparer<T>) Checks if the specified value is between the minLimit and the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsBetween instead.\")] public static void IsBetween<T>(Expression<Func<T>> expression, T minLimit, T maxLimit, IComparer<T> comparer) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T | Improve this Doc View Source IsDefined<TEnum>(TEnum, String) Checks if the specified value is defined in the enum type. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsDefined instead.\")] public static void IsDefined<TEnum>(TEnum value, string parameterName) where TEnum : struct, IConvertible Parameters Type Name Description TEnum value The value to check. System.String parameterName The name of the parameter. Type Parameters Name Description TEnum The type of the enum. | Improve this Doc View Source IsDefined<TEnum>(Expression<Func<TEnum>>) Checks if the specified value is defined in the enum type. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsDefined instead.\")] public static void IsDefined<TEnum>(Expression<Func<TEnum>> expression) where TEnum : struct, IConvertible Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEnum>> expression The enum as an Expression. Type Parameters Name Description TEnum The type of the enum. | Improve this Doc View Source IsEqualTo<T>(T, String, T) Checks if the specified value is equal to the reference value. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualTo instead.\")] public static void IsEqualTo<T>(T value, string parameterName, T referenceValue) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T referenceValue The reference value. Type Parameters Name Description T The type of the value | Improve this Doc View Source IsEqualTo<T>(T, String, T, IComparer<T>) Checks if the specified value is equal to the reference value. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualTo instead.\")] public static void IsEqualTo<T>(T value, string parameterName, T referenceValue, IComparer<T> comparer) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T referenceValue The reference value. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value | Improve this Doc View Source IsEqualTo<T>(Expression<Func<T>>, T) Checks if the specified value is equal to the reference value. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualTo instead.\")] public static void IsEqualTo<T>(Expression<Func<T>> expression, T referenceValue) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an expression. T referenceValue The reference value. Type Parameters Name Description T | Improve this Doc View Source IsEqualTo<T>(Expression<Func<T>>, T, IComparer<T>) Checks if the specified System.IO.FileSystemInfo expression exists. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualTo instead.\")] public static void IsEqualTo<T>(Expression<Func<T>> expression, T referenceValue, IComparer<T> comparer) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an expression. T referenceValue The reference value. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T | Improve this Doc View Source IsEqualToZero(Double, String) Checks if the specified value is equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualToZero instead.\")] public static void IsEqualToZero(double value, string parameterName) Parameters Type Name Description System.Double value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsEqualToZero(Int32, String) Checks if the specified value is equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualToZero instead.\")] public static void IsEqualToZero(int value, string parameterName) Parameters Type Name Description System.Int32 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsEqualToZero(Int64, String) Checks if the specified value is equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualToZero instead.\")] public static void IsEqualToZero(long value, string parameterName) Parameters Type Name Description System.Int64 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsEqualToZero(Expression<Func<Double>>) Checks if the specified value is equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualToZero instead.\")] public static void IsEqualToZero(Expression<Func<double>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Double >> expression The value as an Expression. | Improve this Doc View Source IsEqualToZero(Expression<Func<Int32>>) Checks if the specified value is equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualToZero instead.\")] public static void IsEqualToZero(Expression<Func<int>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Int32 >> expression The value as an Expression. | Improve this Doc View Source IsEqualToZero(Expression<Func<Int64>>) Checks if the specified value is equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualToZero instead.\")] public static void IsEqualToZero(Expression<Func<long>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Int64 >> expression The value as an Expression. | Improve this Doc View Source IsEqualToZero(Expression<Func<Single>>) Checks if the specified value is equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualToZero instead.\")] public static void IsEqualToZero(Expression<Func<float>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Single >> expression The value as an Expression. | Improve this Doc View Source IsEqualToZero(Single, String) Checks if the specified value is equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsEqualToZero instead.\")] public static void IsEqualToZero(float value, string parameterName) Parameters Type Name Description System.Single value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThan<T>(T, String, T) Checks if the specified value is greater than the minLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThan instead.\")] public static void IsGreaterThan<T>(T value, string parameterName, T minLimit) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. Type Parameters Name Description T | Improve this Doc View Source IsGreaterThan<T>(T, String, T, IComparer<T>) Checks if the specified value is greater than the minLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThan instead.\")] public static void IsGreaterThan<T>(T value, string parameterName, T minLimit, IComparer<T> comparer) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T | Improve this Doc View Source IsGreaterThan<T>(Expression<Func<T>>, T) Checks if the specified value is greater than the minLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThan instead.\")] public static void IsGreaterThan<T>(Expression<Func<T>> expression, T minLimit) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. Type Parameters Name Description T | Improve this Doc View Source IsGreaterThan<T>(Expression<Func<T>>, T, IComparer<T>) Checks if the specified value is greater than the minLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThan instead.\")] public static void IsGreaterThan<T>(Expression<Func<T>> expression, T minLimit, IComparer<T> comparer) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T | Improve this Doc View Source IsGreaterThanOrEqualTo<T>(T, String, T) Checks if the specified value is greater than or equal to the minLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualTo instead.\")] public static void IsGreaterThanOrEqualTo<T>(T value, string parameterName, T minLimit) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. Type Parameters Name Description T | Improve this Doc View Source IsGreaterThanOrEqualTo<T>(T, String, T, IComparer<T>) Checks if the specified value is greater than or equal to the minLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualTo instead.\")] public static void IsGreaterThanOrEqualTo<T>(T value, string parameterName, T minLimit, IComparer<T> comparer) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T | Improve this Doc View Source IsGreaterThanOrEqualTo<T>(Expression<Func<T>>, T) Checks if the specified value is greater than or equal to the minLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualTo instead.\")] public static void IsGreaterThanOrEqualTo<T>(Expression<Func<T>> expression, T minLimit) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. Type Parameters Name Description T | Improve this Doc View Source IsGreaterThanOrEqualTo<T>(Expression<Func<T>>, T, IComparer<T>) Checks if the specified value is greater than or equal to the minLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualTo instead.\")] public static void IsGreaterThanOrEqualTo<T>(Expression<Func<T>> expression, T minLimit, IComparer<T> comparer) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T | Improve this Doc View Source IsGreaterThanOrEqualToZero(Double, String) Checks if the specified value is greater than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualToZero instead.\")] public static void IsGreaterThanOrEqualToZero(double value, string parameterName) Parameters Type Name Description System.Double value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Int32, String) Checks if the specified value is greater than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualToZero instead.\")] public static void IsGreaterThanOrEqualToZero(int value, string parameterName) Parameters Type Name Description System.Int32 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Int64, String) Checks if the specified value is greater than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualToZero instead.\")] public static void IsGreaterThanOrEqualToZero(long value, string parameterName) Parameters Type Name Description System.Int64 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Expression<Func<Double>>) Checks if the specified value is greater than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualToZero instead.\")] public static void IsGreaterThanOrEqualToZero(Expression<Func<double>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Double >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Expression<Func<Int32>>) Checks if the specified value is greater than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualToZero instead.\")] public static void IsGreaterThanOrEqualToZero(Expression<Func<int>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Int32 >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Expression<Func<Int64>>) Checks if the specified value is greater than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualToZero instead.\")] public static void IsGreaterThanOrEqualToZero(Expression<Func<long>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Int64 >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Expression<Func<Single>>) Checks if the specified value is greater than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualToZero instead.\")] public static void IsGreaterThanOrEqualToZero(Expression<Func<float>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Single >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Single, String) Checks if the specified value is greater than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanOrEqualToZero instead.\")] public static void IsGreaterThanOrEqualToZero(float value, string parameterName) Parameters Type Name Description System.Single value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanZero(Double, String) Checks if the specified value is greater than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanZero instead.\")] public static void IsGreaterThanZero(double value, string parameterName) Parameters Type Name Description System.Double value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanZero(Int32, String) Checks if the specified value is greater than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanZero instead.\")] public static void IsGreaterThanZero(int value, string parameterName) Parameters Type Name Description System.Int32 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanZero(Int64, String) Checks if the specified value is greater than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanZero instead.\")] public static void IsGreaterThanZero(long value, string parameterName) Parameters Type Name Description System.Int64 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanZero(Expression<Func<Double>>) Checks if the specified value is greater than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanZero instead.\")] public static void IsGreaterThanZero(Expression<Func<double>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Double >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanZero(Expression<Func<Int32>>) Checks if the specified value is greater than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanZero instead.\")] public static void IsGreaterThanZero(Expression<Func<int>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Int32 >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanZero(Expression<Func<Int64>>) Checks if the specified value is greater than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanZero instead.\")] public static void IsGreaterThanZero(Expression<Func<long>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Int64 >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanZero(Expression<Func<Single>>) Checks if the specified value is greater than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanZero instead.\")] public static void IsGreaterThanZero(Expression<Func<float>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Single >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanZero(Single, String) Checks if the specified value is greater than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsGreaterThanZero instead.\")] public static void IsGreaterThanZero(float value, string parameterName) Parameters Type Name Description System.Single value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThan<T>(T, String, T) Checks if the specified value is lower than the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThan instead.\")] public static void IsLowerThan<T>(T value, string parameterName, T maxLimit) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T maxLimit The max limit. Type Parameters Name Description T | Improve this Doc View Source IsLowerThan<T>(T, String, T, IComparer<T>) Checks if the specified value is lower than the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThan instead.\")] public static void IsLowerThan<T>(T value, string parameterName, T maxLimit, IComparer<T> comparer) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T | Improve this Doc View Source IsLowerThan<T>(Expression<Func<T>>, T) Checks if the specified value is lower than the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThan instead.\")] public static void IsLowerThan<T>(Expression<Func<T>> expression, T maxLimit) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T maxLimit The max limit. Type Parameters Name Description T | Improve this Doc View Source IsLowerThan<T>(Expression<Func<T>>, T, IComparer<T>) Checks if the specified value is lower than the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThan instead.\")] public static void IsLowerThan<T>(Expression<Func<T>> expression, T maxLimit, IComparer<T> comparer) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T | Improve this Doc View Source IsLowerThanOrEqualTo<T>(T, String, T) Checks if the specified value is lower than or equal to the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualTo instead.\")] public static void IsLowerThanOrEqualTo<T>(T value, string parameterName, T maxLimit) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T maxLimit The max limit. Type Parameters Name Description T | Improve this Doc View Source IsLowerThanOrEqualTo<T>(T, String, T, IComparer<T>) Checks if the specified value is lower than or equal to the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualTo instead.\")] public static void IsLowerThanOrEqualTo<T>(T value, string parameterName, T maxLimit, IComparer<T> comparer) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T | Improve this Doc View Source IsLowerThanOrEqualTo<T>(Expression<Func<T>>, T) Checks if the specified value is lower than or equal to the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualTo instead.\")] public static void IsLowerThanOrEqualTo<T>(Expression<Func<T>> expression, T maxLimit) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T maxLimit The max limit. Type Parameters Name Description T | Improve this Doc View Source IsLowerThanOrEqualTo<T>(Expression<Func<T>>, T, IComparer<T>) Checks if the specified value is lower than or equal to the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualTo instead.\")] public static void IsLowerThanOrEqualTo<T>(Expression<Func<T>> expression, T maxLimit, IComparer<T> comparer) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T | Improve this Doc View Source IsLowerThanOrEqualToZero(Double, String) Checks if the specified value is lower than or equals to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualToZero instead.\")] public static void IsLowerThanOrEqualToZero(double value, string parameterName) Parameters Type Name Description System.Double value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanOrEqualToZero(Int32, String) Checks if the specified value is lower than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualToZero instead.\")] public static void IsLowerThanOrEqualToZero(int value, string parameterName) Parameters Type Name Description System.Int32 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanOrEqualToZero(Int64, String) Checks if the specified value is lower than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualToZero instead.\")] public static void IsLowerThanOrEqualToZero(long value, string parameterName) Parameters Type Name Description System.Int64 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanOrEqualToZero(Expression<Func<Double>>) Checks if the specified value is lower than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualToZero instead.\")] public static void IsLowerThanOrEqualToZero(Expression<Func<double>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Double >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanOrEqualToZero(Expression<Func<Int32>>) Checks if the specified value is lower than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualToZero instead.\")] public static void IsLowerThanOrEqualToZero(Expression<Func<int>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Int32 >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanOrEqualToZero(Expression<Func<Int64>>) Checks if the specified value is lower than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualToZero instead.\")] public static void IsLowerThanOrEqualToZero(Expression<Func<long>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Int64 >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanOrEqualToZero(Expression<Func<Single>>) Checks if the specified value is lower than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualToZero instead.\")] public static void IsLowerThanOrEqualToZero(Expression<Func<float>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Single >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanOrEqualToZero(Single, String) Checks if the specified value is lower than or equal to zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanOrEqualToZero instead.\")] public static void IsLowerThanOrEqualToZero(float value, string parameterName) Parameters Type Name Description System.Single value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanZero(Double, String) Checks if the specified value is lower than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanZero instead.\")] public static void IsLowerThanZero(double value, string parameterName) Parameters Type Name Description System.Double value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanZero(Int32, String) Checks if the specified value is lower than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanZero instead.\")] public static void IsLowerThanZero(int value, string parameterName) Parameters Type Name Description System.Int32 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanZero(Int64, String) Checks if the specified value is lower than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanZero instead.\")] public static void IsLowerThanZero(long value, string parameterName) Parameters Type Name Description System.Int64 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanZero(Expression<Func<Double>>) Checks if the specified value is lower than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanZero instead.\")] public static void IsLowerThanZero(Expression<Func<double>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Double >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanZero(Expression<Func<Int32>>) Checks if the specified value is lower than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanZero instead.\")] public static void IsLowerThanZero(Expression<Func<int>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Int32 >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanZero(Expression<Func<Int64>>) Checks if the specified value is lower than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanZero instead.\")] public static void IsLowerThanZero(Expression<Func<long>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Int64 >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanZero(Expression<Func<Single>>) Checks if the specified value is lower than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanZero instead.\")] public static void IsLowerThanZero(Expression<Func<float>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Single >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanZero(Single, String) Checks if the specified value is lower than zero. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsLowerThanZero instead.\")] public static void IsLowerThanZero(float value, string parameterName) Parameters Type Name Description System.Single value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsNotEmptyGuid(Guid, String) Checks if the specified System.Guid value is empty Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsNotEmptyGuid instead.\")] public static void IsNotEmptyGuid(Guid value, string parameterName) Parameters Type Name Description System.Guid value The value. System.String parameterName Name of the parameter. Exceptions Type Condition System.ArgumentException Thrown when the value is equal to System.Guid.Empty | Improve this Doc View Source IsNotEmptyGuid(Expression<Func<Guid>>) Checks if the specified System.Guid value is empty Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsNotEmptyGuid instead.\")] public static void IsNotEmptyGuid(Expression<Func<Guid>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.Guid >> expression The value as an Expression. | Improve this Doc View Source IsNotNull(Object, String) Checks if the specified value is null Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsNotNull instead.\")] public static void IsNotNull(object value, string parameterName) Parameters Type Name Description System.Object value The value. System.String parameterName Name of the parameter. Exceptions Type Condition System.ArgumentException Thrown when the value is null | Improve this Doc View Source IsNotNull<T>(Expression<Func<T>>) Checks if the specified value is null Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsNotNull instead.\")] public static void IsNotNull<T>(Expression<Func<T>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an expression. Type Parameters Name Description T Exceptions Type Condition System.ArgumentException Thrown when the value is null | Improve this Doc View Source IsNotNullOrEmpty(Expression<Func<String>>) Checks if the specified System.String value is null or empty. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsNotNullOrEmpty instead.\")] public static void IsNotNullOrEmpty(Expression<Func<string>> expression) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < System.String >> expression The value as an Expression. | Improve this Doc View Source IsNotNullOrEmpty(String, String) Checks if the specified System.String value is null or empty. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsNotNullOrEmpty instead.\")] public static void IsNotNullOrEmpty(string value, string parameterName) Parameters Type Name Description System.String value The value. System.String parameterName Name of the parameter. Exceptions Type Condition System.ArgumentException Thrown when the value is null or equal to System.String.Empty | Improve this Doc View Source IsStrictlyBetween<T>(T, String, T, T) Checks if the specified value is strictly between the minLimit and the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsStrictlyBetween instead.\")] public static void IsStrictlyBetween<T>(T value, string parameterName, T minLimit, T maxLimit) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. T maxLimit The max limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsStrictlyBetween<T>(T, String, T, T, IComparer<T>) Checks if the specified value is strictly between the minLimit and the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsStrictlyBetween instead.\")] public static void IsStrictlyBetween<T>(T value, string parameterName, T minLimit, T maxLimit, IComparer<T> comparer) Parameters Type Name Description T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsStrictlyBetween<T>(Expression<Func<T>>, T, T) Checks if the specified value is strictly between between the minLimit and the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsStrictlyBetween instead.\")] public static void IsStrictlyBetween<T>(Expression<Func<T>> expression, T minLimit, T maxLimit) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. T maxLimit The max limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsStrictlyBetween<T>(Expression<Func<T>>, T, T, IComparer<T>) Checks if the specified value is strictly between the minLimit and the maxLimit. Declaration [Obsolete(\"Please use MGR.Guardian.ChecksThat.Guardian.ChecksThat.IsStrictlyBetween instead.\")] public static void IsStrictlyBetween<T>(Expression<Func<T>> expression, T minLimit, T maxLimit, IComparer<T> comparer) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat."
  },
  "index.html": {
    "href": "index.html",
    "title": "MGR.Guard documentation | MGR.Guard documentation site",
    "keywords": "MGR.Guard documentation MGR.Guard is small library to check the validity of arguments, parameters, variables... To install the latest stable version: Via the dotnet CLI: > dotnet add package MGR.Guard Via the package manager (in Visual Studio): PM> Install-Package MGR.Guard How to use it The entry point of the library is the static propery MGR.Guard.Guardian.ChecksThat . The methods allow you to guard against null value, lower or upper bound, file existence. If the check fails, an exception is thrown. All built-in methods exists in two flavors: The first takes the value to check and the name of the value (to provide to the thrown exection), The second takes an expression from which the value and its name are extracted. The first form is much more performant (~600x), but the second one is more maintenable. * You can find all built-in methods here , or browse the API . What if the provided methods are not enough? Unlike many other libraries, MGR.Guard is built with extensibility in mind: all methods are extensions methods, which means you can add your owns. Please read this if you want to add your own check. Alternate installation method Also, in order to limit the dependency (specially if you are building a domain), the library is available as a Source Code Only NuGet package : MAF.Guard.Sources ."
  },
  "guard.html": {
    "href": "guard.html",
    "title": "MGR.Guard API | MGR.Guard documentation site",
    "keywords": "MGR.Guard API All methods are extensions methods to the MGR.Guard.Guardian instance accessible via the Guardian.ChecksThat property. They throw exception when the condition is not met. The methods all have two forms: One that takes the parameter to check, the name of the parameter, and possibly some additional values; One that takes an expression to specify the value and the name of the parameter , and possibly some additional values. Exists Checks if a System.IO.FileSystemInfo exists. Exception thrown System.IO.FileNotFoundException if the file or directory doesn't exists. IsBetween Checks if a value is between a min and a max limit. Exception thrown System.ArgumentOutOfRangeException if the value is not between the specified min and max limits. IsDefined Checks if a value is a defined enum value. Exception thrown System.ArgumentException if the specified type is not an enum . System.ArgumentOutOfRangeException if the value is not a defined value of the specified enum . IsEqualTo Checks if a value is equal to another reference. Exception thrown System.ArgumentNullException if the specified comparer is null. System.ArgumentException if the specified value is not equal to the reference. IsEqualToZero Checks if a value is equal to zero. Exception thrown System.IO.ArgumentException if the specified value is not equal to zero. IsGreaterThan Checks if a value is greater than a minimal limit. Exception thrown System.ArgumentNullException if the specified comparer is null. System.ArgumentOutOfRangeException if the specified value is lower than the minimal limit. IsGreaterThanOrEqualTo Checks if a value is greater than or equal to a minimal limit. Exception thrown System.ArgumentNullException if the specified comparer is null. System.ArgumentOutOfRangeException if the specified value is lower than or equal to the minimal limit. IsGreaterThanOrEqualToZero Checks if a value is greater than or equal to zero. Exception thrown System.ArgumentOutOfRangeException if the specified value is lower than or equal to zero. IsGreaterThanZero Checks if a value is greater than zero. Exception thrown System.ArgumentOutOfRangeException if the specified value is lower than zero. IsLowerThan Checks if a value is lower than a maximal limit. Exception thrown System.ArgumentNullException if the specified comparer is null. System.ArgumentOutOfRangeException if the specified value is greater than a maximal limit. IsLowerThanOrEqualTo Checks if a value is lower than or equal to a minimal limit. Exception thrown System.ArgumentNullException if the specified comparer is null. System.ArgumentOutOfRangeException if the specified value is greater than or equal to the minimal limit. IsLowerThanOrEqualToZero Checks if a value is lower than or equal to zero. Exception thrown System.ArgumentOutOfRangeException if the specified value is greater than or equal to zero. IsLowerThanZero Checks if a value is lower than zero. Exception thrown System.ArgumentOutOfRangeException if the specified value is greater than zero. IsNotEmptyGuid Checks if a System.Guid is not empty. Exception thrown System.ArgumentNullException if the specified System.Guid is empty. IsNotNull Checks if a value is not null . Exception thrown System.ArgumentNullException if the specified value is null . IsNotNullOrEmpty Checks if a string is not null or empty. Exception thrown System.ArgumentNullException if the specified value is null or empty. IsStrictlyBetween Checks if a value is strictly between a min and a max limit. Exception thrown System.ArgumentOutOfRangeException if the value is not strictly between the specified min and max limits."
  },
  "guard-sources.html": {
    "href": "guard-sources.html",
    "title": "MGR.Guard.Sources | MGR.Guard documentation site",
    "keywords": "MGR.Guard.Sources The purpose of the MGR.Guard.Sources package is to provide the MGR.Guard library as source code to be used in a library without adding a dependency to it. All classes ( MGR.Guard.Guardian , MGR.Guard.GuardianExtensions and the now obsolete MGR.Guard.Guard ) are marked as internal to not be exposed by your library. These classes can be marked as public by setting the constant MGR_GUARD_PUBLIC ."
  },
  "extensibility.html": {
    "href": "extensibility.html",
    "title": "MGR.Guard extensibility | MGR.Guard documentation site",
    "keywords": "MGR.Guard extensibility All checks are built as extension method of the MGR.Guard.Guardian class. To be constistent with built-in methods, I recommand to have the following signature: void YourMathod(this Guardian source, TypeOfValue value, string parameterName, <optional additional values>) . You can also provide an overload with an expression and use the explicitly implemented (by the Guardian instance) IGuardian.ExtractValueAndParameterNameFromExpression . This method will extract the value and the parameter name from the expression. As an example, the method to check for non nullability is implemented as: public static void IsNotNull<T>(this Guardian source, Expression<Func<T>> expression) { var (value, parameterName) = ((IGuardian)source).ExtractValueAndParameterNameFromExpression(expression); IsNotNull(source, value, parameterName); } public static void IsNotNull(this Guardian source, object value, string parameterName) { if (value == null) { throw new ArgumentNullException(parameterName, essages.IsNotNullMessage); } }"
  },
  "api/MGR.Guard.IGuardian.html": {
    "href": "api/MGR.Guard.IGuardian.html",
    "title": "Interface IGuardian | MGR.Guard documentation site",
    "keywords": "Interface IGuardian Interface to hide the method to extract the value and parameter name from an expression. Namespace : MGR.Guard Assembly : MGR.Guard.dll Syntax public interface IGuardian Methods | Improve this Doc View Source ExtractValueAndParameterNameFromExpression<T>(Expression<Func<T>>) Extract the value and the parameter name from an expression. Declaration ValueAndParameterName<T> ExtractValueAndParameterNameFromExpression<T>(Expression<Func<T>> selector) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T>> selector The expression that represent the selection of the value. Returns Type Description ValueAndParameterName <T> An object containing the value and the parameter name represented by the expression. Type Parameters Name Description T The type of value returned by the expression."
  },
  "api/MGR.Guard.html": {
    "href": "api/MGR.Guard.html",
    "title": "Namespace MGR.Guard | MGR.Guard documentation site",
    "keywords": "Namespace MGR.Guard Classes Guard Class to check whether a parameter, argument, invariant satisfy some usual conditions. Guardian Class to check whether a parameter, argument, invariant satisfy some usual conditions. GuardianExtensions Extensions methods for the Guardian class. Structs ValueAndParameterName<T> Encapsulate the value and the parameter name extracted from an expression. Interfaces IGuardian Interface to hide the method to extract the value and parameter name from an expression."
  },
  "api/MGR.Guard.GuardianExtensions.html": {
    "href": "api/MGR.Guard.GuardianExtensions.html",
    "title": "Class GuardianExtensions | MGR.Guard documentation site",
    "keywords": "Class GuardianExtensions Extensions methods for the Guardian class. Inheritance System.Object GuardianExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : MGR.Guard Assembly : MGR.Guard.dll Syntax public static class GuardianExtensions Methods | Improve this Doc View Source Exists(Guardian, FileSystemInfo, String) Checks if the specified System.IO.FileSystemInfo file exists. Declaration public static void Exists(this Guardian source, FileSystemInfo file, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.IO.FileSystemInfo file The file. System.String parameterName The name of the file parameter. | Improve this Doc View Source Exists(Guardian, Expression<Func<FileSystemInfo>>) Checks if the specified System.IO.FileSystemInfo expression exists. Declaration public static void Exists(this Guardian source, Expression<Func<FileSystemInfo>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.IO.FileSystemInfo >> expression The file as an Expression. | Improve this Doc View Source IsBetween<T>(Guardian, T, String, T, T) Checks if the specified value is between the minLimit and the maxLimit. Declaration public static void IsBetween<T>(this Guardian source, T value, string parameterName, T minLimit, T maxLimit) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. T maxLimit The max limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsBetween<T>(Guardian, T, String, T, T, IComparer<T>) Checks if the specified value is between the minLimit and the maxLimit. Declaration public static void IsBetween<T>(this Guardian source, T value, string parameterName, T minLimit, T maxLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsBetween<T>(Guardian, Expression<Func<T>>, T, T) Checks if the specified value is between between the minLimit and the maxLimit. Declaration public static void IsBetween<T>(this Guardian source, Expression<Func<T>> expression, T minLimit, T maxLimit) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. T maxLimit The max limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsBetween<T>(Guardian, Expression<Func<T>>, T, T, IComparer<T>) Checks if the specified value is between the minLimit and the maxLimit. Declaration public static void IsBetween<T>(this Guardian source, Expression<Func<T>> expression, T minLimit, T maxLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsDefined<TEnum>(Guardian, TEnum, String) Checks if the specified value is defined in the enum type. Declaration public static void IsDefined<TEnum>(this Guardian source, TEnum value, string parameterName) where TEnum : struct, IConvertible Parameters Type Name Description Guardian source The Guardian to extends. TEnum value The value to check. System.String parameterName The name of the parameter. Type Parameters Name Description TEnum The type of the enum to Guardian.ChecksThat. | Improve this Doc View Source IsDefined<TEnum>(Guardian, Expression<Func<TEnum>>) Checks if the specified value is defined in the enum type. Declaration public static void IsDefined<TEnum>(this Guardian source, Expression<Func<TEnum>> expression) where TEnum : struct, IConvertible Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <TEnum>> expression The enum as an Expression. Type Parameters Name Description TEnum The type of the enum to Guardian.ChecksThat. | Improve this Doc View Source IsEqualTo<T>(Guardian, T, String, T) Checks if the specified value is equal to the reference value. Declaration public static void IsEqualTo<T>(this Guardian source, T value, string parameterName, T referenceValue) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T referenceValue The reference value. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsEqualTo<T>(Guardian, T, String, T, IComparer<T>) Checks if the specified value is equal to the reference value. Declaration public static void IsEqualTo<T>(this Guardian source, T value, string parameterName, T referenceValue, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T referenceValue The reference value. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsEqualTo<T>(Guardian, Expression<Func<T>>, T) Checks if the specified value is equal to the reference value. Declaration public static void IsEqualTo<T>(this Guardian source, Expression<Func<T>> expression, T referenceValue) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an expression. T referenceValue The reference value. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsEqualTo<T>(Guardian, Expression<Func<T>>, T, IComparer<T>) Checks if the specified System.IO.FileSystemInfo expression exists. Declaration public static void IsEqualTo<T>(this Guardian source, Expression<Func<T>> expression, T referenceValue, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an expression. T referenceValue The reference value. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsEqualToZero(Guardian, Double, String) Checks if the specified value is equal to zero. Declaration public static void IsEqualToZero(this Guardian source, double value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Double value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsEqualToZero(Guardian, Int32, String) Checks if the specified value is equal to zero. Declaration public static void IsEqualToZero(this Guardian source, int value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Int32 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsEqualToZero(Guardian, Int64, String) Checks if the specified value is equal to zero. Declaration public static void IsEqualToZero(this Guardian source, long value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Int64 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsEqualToZero(Guardian, Expression<Func<Double>>) Checks if the specified value is equal to zero. Declaration public static void IsEqualToZero(this Guardian source, Expression<Func<double>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Double >> expression The value as an Expression. | Improve this Doc View Source IsEqualToZero(Guardian, Expression<Func<Int32>>) Checks if the specified value is equal to zero. Declaration public static void IsEqualToZero(this Guardian source, Expression<Func<int>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Int32 >> expression The value as an Expression. | Improve this Doc View Source IsEqualToZero(Guardian, Expression<Func<Int64>>) Checks if the specified value is equal to zero. Declaration public static void IsEqualToZero(this Guardian source, Expression<Func<long>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Int64 >> expression The value as an Expression. | Improve this Doc View Source IsEqualToZero(Guardian, Expression<Func<Single>>) Checks if the specified value is equal to zero. Declaration public static void IsEqualToZero(this Guardian source, Expression<Func<float>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Single >> expression The value as an Expression. | Improve this Doc View Source IsEqualToZero(Guardian, Single, String) Checks if the specified value is equal to zero. Declaration public static void IsEqualToZero(this Guardian source, float value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Single value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThan<T>(Guardian, T, String, T) Checks if the specified value is greater than the minLimit. Declaration public static void IsGreaterThan<T>(this Guardian source, T value, string parameterName, T minLimit) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsGreaterThan<T>(Guardian, T, String, T, IComparer<T>) Checks if the specified value is greater than the minLimit. Declaration public static void IsGreaterThan<T>(this Guardian source, T value, string parameterName, T minLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsGreaterThan<T>(Guardian, Expression<Func<T>>, T) Checks if the specified value is greater than the minLimit. Declaration public static void IsGreaterThan<T>(this Guardian source, Expression<Func<T>> expression, T minLimit) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsGreaterThan<T>(Guardian, Expression<Func<T>>, T, IComparer<T>) Checks if the specified value is greater than the minLimit. Declaration public static void IsGreaterThan<T>(this Guardian source, Expression<Func<T>> expression, T minLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsGreaterThanOrEqualTo<T>(Guardian, T, String, T) Checks if the specified value is greater than or equal to the minLimit. Declaration public static void IsGreaterThanOrEqualTo<T>(this Guardian source, T value, string parameterName, T minLimit) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsGreaterThanOrEqualTo<T>(Guardian, T, String, T, IComparer<T>) Checks if the specified value is greater than or equal to the minLimit. Declaration public static void IsGreaterThanOrEqualTo<T>(this Guardian source, T value, string parameterName, T minLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsGreaterThanOrEqualTo<T>(Guardian, Expression<Func<T>>, T) Checks if the specified value is greater than or equal to the minLimit. Declaration public static void IsGreaterThanOrEqualTo<T>(this Guardian source, Expression<Func<T>> expression, T minLimit) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsGreaterThanOrEqualTo<T>(Guardian, Expression<Func<T>>, T, IComparer<T>) Checks if the specified value is greater than or equal to the minLimit. Declaration public static void IsGreaterThanOrEqualTo<T>(this Guardian source, Expression<Func<T>> expression, T minLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Guardian, Double, String) Checks if the specified value is greater than or equal to zero. Declaration public static void IsGreaterThanOrEqualToZero(this Guardian source, double value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Double value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Guardian, Int32, String) Checks if the specified value is greater than or equal to zero. Declaration public static void IsGreaterThanOrEqualToZero(this Guardian source, int value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Int32 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Guardian, Int64, String) Checks if the specified value is greater than or equal to zero. Declaration public static void IsGreaterThanOrEqualToZero(this Guardian source, long value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Int64 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Guardian, Expression<Func<Double>>) Checks if the specified value is greater than or equal to zero. Declaration public static void IsGreaterThanOrEqualToZero(this Guardian source, Expression<Func<double>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Double >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Guardian, Expression<Func<Int32>>) Checks if the specified value is greater than or equal to zero. Declaration public static void IsGreaterThanOrEqualToZero(this Guardian source, Expression<Func<int>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Int32 >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Guardian, Expression<Func<Int64>>) Checks if the specified value is greater than or equal to zero. Declaration public static void IsGreaterThanOrEqualToZero(this Guardian source, Expression<Func<long>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Int64 >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Guardian, Expression<Func<Single>>) Checks if the specified value is greater than or equal to zero. Declaration public static void IsGreaterThanOrEqualToZero(this Guardian source, Expression<Func<float>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Single >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanOrEqualToZero(Guardian, Single, String) Checks if the specified value is greater than or equal to zero. Declaration public static void IsGreaterThanOrEqualToZero(this Guardian source, float value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Single value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanZero(Guardian, Double, String) Checks if the specified value is greater than zero. Declaration public static void IsGreaterThanZero(this Guardian source, double value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Double value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanZero(Guardian, Int32, String) Checks if the specified value is greater than zero. Declaration public static void IsGreaterThanZero(this Guardian source, int value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Int32 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanZero(Guardian, Int64, String) Checks if the specified value is greater than zero. Declaration public static void IsGreaterThanZero(this Guardian source, long value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Int64 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsGreaterThanZero(Guardian, Expression<Func<Double>>) Checks if the specified value is greater than zero. Declaration public static void IsGreaterThanZero(this Guardian source, Expression<Func<double>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Double >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanZero(Guardian, Expression<Func<Int32>>) Checks if the specified value is greater than zero. Declaration public static void IsGreaterThanZero(this Guardian source, Expression<Func<int>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Int32 >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanZero(Guardian, Expression<Func<Int64>>) Checks if the specified value is greater than zero. Declaration public static void IsGreaterThanZero(this Guardian source, Expression<Func<long>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Int64 >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanZero(Guardian, Expression<Func<Single>>) Checks if the specified value is greater than zero. Declaration public static void IsGreaterThanZero(this Guardian source, Expression<Func<float>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Single >> expression The value as an Expression. | Improve this Doc View Source IsGreaterThanZero(Guardian, Single, String) Checks if the specified value is greater than zero. Declaration public static void IsGreaterThanZero(this Guardian source, float value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Single value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThan<T>(Guardian, T, String, T) Checks if the specified value is lower than the maxLimit. Declaration public static void IsLowerThan<T>(this Guardian source, T value, string parameterName, T maxLimit) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T maxLimit The max limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsLowerThan<T>(Guardian, T, String, T, IComparer<T>) Checks if the specified value is lower than the maxLimit. Declaration public static void IsLowerThan<T>(this Guardian source, T value, string parameterName, T maxLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsLowerThan<T>(Guardian, Expression<Func<T>>, T) Checks if the specified value is lower than the maxLimit. Declaration public static void IsLowerThan<T>(this Guardian source, Expression<Func<T>> expression, T maxLimit) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T maxLimit The max limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsLowerThan<T>(Guardian, Expression<Func<T>>, T, IComparer<T>) Checks if the specified value is lower than the maxLimit. Declaration public static void IsLowerThan<T>(this Guardian source, Expression<Func<T>> expression, T maxLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsLowerThanOrEqualTo<T>(Guardian, T, String, T) Checks if the specified value is lower than or equal to the maxLimit. Declaration public static void IsLowerThanOrEqualTo<T>(this Guardian source, T value, string parameterName, T maxLimit) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T maxLimit The max limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsLowerThanOrEqualTo<T>(Guardian, T, String, T, IComparer<T>) Checks if the specified value is lower than or equal to the maxLimit. Declaration public static void IsLowerThanOrEqualTo<T>(this Guardian source, T value, string parameterName, T maxLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. T value The value. System.String parameterName Name of the parameter. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsLowerThanOrEqualTo<T>(Guardian, Expression<Func<T>>, T) Checks if the specified value is lower than or equal to the maxLimit. Declaration public static void IsLowerThanOrEqualTo<T>(this Guardian source, Expression<Func<T>> expression, T maxLimit) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T maxLimit The max limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsLowerThanOrEqualTo<T>(Guardian, Expression<Func<T>>, T, IComparer<T>) Checks if the specified value is lower than or equal to the maxLimit. Declaration public static void IsLowerThanOrEqualTo<T>(this Guardian source, Expression<Func<T>> expression, T maxLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsLowerThanOrEqualToZero(Guardian, Double, String) Checks if the specified value is lower than or equals to zero. Declaration public static void IsLowerThanOrEqualToZero(this Guardian source, double value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Double value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanOrEqualToZero(Guardian, Int32, String) Checks if the specified value is lower than or equal to zero. Declaration public static void IsLowerThanOrEqualToZero(this Guardian source, int value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Int32 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanOrEqualToZero(Guardian, Int64, String) Checks if the specified value is lower than or equal to zero. Declaration public static void IsLowerThanOrEqualToZero(this Guardian source, long value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Int64 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanOrEqualToZero(Guardian, Expression<Func<Double>>) Checks if the specified value is lower than or equal to zero. Declaration public static void IsLowerThanOrEqualToZero(this Guardian source, Expression<Func<double>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Double >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanOrEqualToZero(Guardian, Expression<Func<Int32>>) Checks if the specified value is lower than or equal to zero. Declaration public static void IsLowerThanOrEqualToZero(this Guardian source, Expression<Func<int>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Int32 >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanOrEqualToZero(Guardian, Expression<Func<Int64>>) Checks if the specified value is lower than or equal to zero. Declaration public static void IsLowerThanOrEqualToZero(this Guardian source, Expression<Func<long>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Int64 >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanOrEqualToZero(Guardian, Expression<Func<Single>>) Checks if the specified value is lower than or equal to zero. Declaration public static void IsLowerThanOrEqualToZero(this Guardian source, Expression<Func<float>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Single >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanOrEqualToZero(Guardian, Single, String) Checks if the specified value is lower than or equal to zero. Declaration public static void IsLowerThanOrEqualToZero(this Guardian source, float value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Single value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanZero(Guardian, Double, String) Checks if the specified value is lower than zero. Declaration public static void IsLowerThanZero(this Guardian source, double value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Double value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanZero(Guardian, Int32, String) Checks if the specified value is lower than zero. Declaration public static void IsLowerThanZero(this Guardian source, int value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Int32 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanZero(Guardian, Int64, String) Checks if the specified value is lower than zero. Declaration public static void IsLowerThanZero(this Guardian source, long value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Int64 value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsLowerThanZero(Guardian, Expression<Func<Double>>) Checks if the specified value is lower than zero. Declaration public static void IsLowerThanZero(this Guardian source, Expression<Func<double>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Double >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanZero(Guardian, Expression<Func<Int32>>) Checks if the specified value is lower than zero. Declaration public static void IsLowerThanZero(this Guardian source, Expression<Func<int>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Int32 >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanZero(Guardian, Expression<Func<Int64>>) Checks if the specified value is lower than zero. Declaration public static void IsLowerThanZero(this Guardian source, Expression<Func<long>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Int64 >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanZero(Guardian, Expression<Func<Single>>) Checks if the specified value is lower than zero. Declaration public static void IsLowerThanZero(this Guardian source, Expression<Func<float>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Single >> expression The value as an Expression. | Improve this Doc View Source IsLowerThanZero(Guardian, Single, String) Checks if the specified value is lower than zero. Declaration public static void IsLowerThanZero(this Guardian source, float value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Single value The value. System.String parameterName Name of the parameter. | Improve this Doc View Source IsNotEmptyGuid(Guardian, Guid, String) Checks if the specified System.Guid value is empty Declaration public static void IsNotEmptyGuid(this Guardian source, Guid value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Guid value The value. System.String parameterName Name of the parameter. Exceptions Type Condition System.ArgumentException Thrown when the value is equal to System.Guid.Empty | Improve this Doc View Source IsNotEmptyGuid(Guardian, Expression<Func<Guid>>) Checks if the specified System.Guid value is empty Declaration public static void IsNotEmptyGuid(this Guardian source, Expression<Func<Guid>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.Guid >> expression The value as an Expression. | Improve this Doc View Source IsNotNull(Guardian, Object, String) Checks if the specified value is null Declaration public static void IsNotNull(this Guardian source, object value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.Object value The value. System.String parameterName Name of the parameter. Exceptions Type Condition System.ArgumentException Thrown when the value is null | Improve this Doc View Source IsNotNull<T>(Guardian, Expression<Func<T>>) Checks if the specified value is null Declaration public static void IsNotNull<T>(this Guardian source, Expression<Func<T>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an expression. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. Exceptions Type Condition System.ArgumentException Thrown when the value is null | Improve this Doc View Source IsNotNullOrEmpty(Guardian, Expression<Func<String>>) Checks if the specified System.String value is null or empty. Declaration public static void IsNotNullOrEmpty(this Guardian source, Expression<Func<string>> expression) Parameters Type Name Description Guardian source The Guardian to extends. System.Linq.Expressions.Expression < System.Func < System.String >> expression The value as an Expression. | Improve this Doc View Source IsNotNullOrEmpty(Guardian, String, String) Checks if the specified System.String value is null or empty. Declaration public static void IsNotNullOrEmpty(this Guardian source, string value, string parameterName) Parameters Type Name Description Guardian source The Guardian to extends. System.String value The value. System.String parameterName Name of the parameter. Exceptions Type Condition System.ArgumentException Thrown when the value is null or equal to System.String.Empty | Improve this Doc View Source IsStrictlyBetween<T>(Guardian, T, String, T, T) Checks if the specified value is strictly between the minLimit and the maxLimit. Declaration public static void IsStrictlyBetween<T>(this Guardian source, T value, string parameterName, T minLimit, T maxLimit) Parameters Type Name Description Guardian source The Guard to extends. T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. T maxLimit The max limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsStrictlyBetween<T>(Guardian, T, String, T, T, IComparer<T>) Checks if the specified value is strictly between the minLimit and the maxLimit. Declaration public static void IsStrictlyBetween<T>(this Guardian source, T value, string parameterName, T minLimit, T maxLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guard to extends. T value The value. System.String parameterName Name of the parameter. T minLimit The min limit. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsStrictlyBetween<T>(Guardian, Expression<Func<T>>, T, T) Checks if the specified value is strictly between between the minLimit and the maxLimit. Declaration public static void IsStrictlyBetween<T>(this Guardian source, Expression<Func<T>> expression, T minLimit, T maxLimit) Parameters Type Name Description Guardian source The Guard to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. T maxLimit The max limit. Type Parameters Name Description T The type of the value to Guardian.ChecksThat. | Improve this Doc View Source IsStrictlyBetween<T>(Guardian, Expression<Func<T>>, T, T, IComparer<T>) Checks if the specified value is strictly between the minLimit and the maxLimit. Declaration public static void IsStrictlyBetween<T>(this Guardian source, Expression<Func<T>> expression, T minLimit, T maxLimit, IComparer<T> comparer) Parameters Type Name Description Guardian source The Guard to extends. System.Linq.Expressions.Expression < System.Func <T>> expression The value as an Expression. T minLimit The min limit. T maxLimit The max limit. System.Collections.Generic.IComparer <T> comparer The comparer. Type Parameters Name Description T The type of the value to Guardian.ChecksThat."
  },
  "guard-expression.html": {
    "href": "guard-expression.html",
    "title": "MGR.Guard expression-based API | MGR.Guard documentation site",
    "keywords": "MGR.Guard expression-based API The expression-based API takes an expression to specify the value and the name of the parameter. The expression can be any combinaison of: a ConstantExpression (ie () => 1 ), a MemberExpression (ie () => value , () => value.Property ), a BinaryExpression that represents an array index access (ie () => value[0] ) If any part of an expression is null (except the complete expression), a System.NullReferenceException will be thrown be the expression parser."
  }
}